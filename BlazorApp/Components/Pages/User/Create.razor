@page "/user/create"
@using Domain.DTOs.Users;
@using Infrastructure.Interfaces
@inject IUserService userservice
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h3>create Users</h3>
<div class="card shadow rounded-4 p-4" style="max-width: 500px;">

    <EditForm FormName="CreateUser" Model="user" OnValidSubmit="HandleValidSubmit">

        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label class="form-label">Name</label>
            <InputText class="form-control" @bind-Value="user.Name" />
        </div>

        <div class="mb-3">
            <label class="form-label">Email</label>
            <InputText class="form-control" @bind-Value="user.Email" />
        </div>

        <div class="mb-3">
            <label class="form-label">Password</label>
            <InputText class="form-control" @bind-Value="user.Password" />
        </div>

        <div class="mb-3">
            <label class="form-label">Phone</label>
            <InputText class="form-control" @bind-Value="user.Phone" />
        </div>

        <div class="mb-3">
            <label class="form-label">Role</label>
            <InputSelect class="form-control" @bind-Value="user.Role" />
        </div>
        <div class="d-flex justify-content-between">
            <div>
                <button type="submit" class="btn btn-primary mb-4" style="background-color: #4A3AFF">
                    + Add new
                </button>
            </div>
        </div>
    </EditForm>












</div>





@code {
    public CreateUserDto user = new();
    public string errorMessage;

    private async Task HandleValidSubmit()
    {
        var response = await userservice.CreateAsync(user);
        if (!response.IsSuccess)
        {
            errorMessage = response.Message!;
            return;
        }
        Navigation.NavigateTo("/user");

    }

}
